@page "/Admin/User/{userId}/Friends"
@inject UserService UserService
@using Ava.Data.Users
@using Microsoft.AspNetCore.Authorization
@using Ava.Components.Account.Shared
@using Ava.Components.Admin.Users.Components
@inherits Ava.Components.Bases.LayoutBase
@attribute [Authorize(Roles = "Admin")]
@if (user != null)
{
    <PageTitle>@user.DisplayName Friends</PageTitle>
}
<AuthorizeView Roles="Admin" Context="authContext">
    <Authorized Context="authorizedContext">
        <UserNavBar User="user" PageName="Friends" />
        <section class="bg-white dark:bg-gray-900">
            <div class="mx-auto max-w-screen-xl">
                <div class="grid gap-8 mb-6 lg:mb-16 md:grid-cols-2">
                    @if (friends != null)
                    {
                        @foreach (var friend in friends)
                        {
                            <div class="items-center bg-gray-50 rounded-lg shadow sm:flex dark:bg-gray-800 dark:border-gray-700">
                                <a href="#">
                                    <img class="w-full rounded-lg sm:rounded-none sm:rounded-l-lg" src="images/avatars/@friend.ProfilePictureUrl" alt="@friend.Given Avatar">
                                </a>
                                <div class="p-5">
                                    <h3 class="text-xl font-bold tracking-tight text-gray-900 dark:text-white">
                                        <a href="#">@friend.DisplayName</a>
                                    </h3>
                                    <span class="text-gray-500 dark:text-gray-400">@friend.Gamertag</span>
                                    <p class="mt-3 mb-4 font-light text-gray-500 dark:text-gray-400">@AgeCalculator.CalculateAge(friend.Birthdate)</p>
                                    <ul class="flex space-x-4 sm:mt-0">
                                        <li>
                                            <a href="#" class="text-gray-500 hover:text-gray-900 dark:hover:text-white">
                                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                                                    <path fill-rule="evenodd" d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" clip-rule="evenodd" />
                                                </svg>
                                            </a>
                                        </li>
                                        <!-- Other social media icons -->
                                    </ul>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>Loading...</p>
                    }
                </div>
            </div>
        </section>
    </Authorized>
</AuthorizeView>

@code
{
    [Parameter]
    public string userId { get; set; } = default!;

    private ApplicationUser user;
    private List<ApplicationUser> friends;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (!string.IsNullOrEmpty(userId))
        {
            user = await UserService.FindUserByIdAsync(userId);
            friends = await UserService.GetFriendsAsync(userId);
        }
    }
}
