@page "/Admin/User/{userId}/"
@inject UserService UserService
@using Ava.Data
@using Microsoft.AspNetCore.Authorization
@using Ava.Components.Account.Shared
@inherits Ava.Components.Bases.LayoutBase
@attribute [Authorize(Roles = "Admin")]

<AuthorizeView Roles="Admin">
    <Authorized>
        @if (user != default)
        {
            <PageTitle>@user.DisplayName</PageTitle>
            <nav class="flex mb-1" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
                    <li class="inline-flex items-center">
                        <a href="Admin/Users" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
                            <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
                                <path fill-rule="evenodd" d="M12 6a3.5 3.5 0 1 0 0 7 3.5 3.5 0 0 0 0-7Zm-1.5 8a4 4 0 0 0-4 4 2 2 0 0 0 2 2h7a2 2 0 0 0 2-2 4 4 0 0 0-4-4h-3Zm6.82-3.096a5.51 5.51 0 0 0-2.797-6.293 3.5 3.5 0 1 1 2.796 6.292ZM19.5 18h.5a2 2 0 0 0 2-2 4 4 0 0 0-4-4h-1.1a5.503 5.503 0 0 1-.471.762A5.998 5.998 0 0 1 19.5 18ZM4 7.5a3.5 3.5 0 0 1 5.477-2.889 5.5 5.5 0 0 0-2.796 6.293A3.501 3.501 0 0 1 4 7.5ZM7.1 12H6a4 4 0 0 0-4 4 2 2 0 0 0 2 2h.5a5.998 5.998 0 0 1 3.071-5.238A5.505 5.505 0 0 1 7.1 12Z" clip-rule="evenodd"/>
                            </svg>
                            Users
                        </a>
                    </li>
                    <li aria-current="page">
                        <div class="flex items-center">
                            <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                            </svg>
                            <span class="ms-1 text-sm font-medium text-gray-500 md:ms-2 dark:text-gray-400">@user.DisplayName</span>
                        </div>
                    </li>
                </ol>
            </nav>
            <div class="flex justify-center">
                <div class="w-4/5">
                    <nav class="bg-white border-gray-200 px-4 lg:px-6 py-2.5 dark:bg-gray-800">
                        <div class="flex flex-wrap justify-between items-center mx-auto max-w-screen-xl">
                            <a href="Admin/User/@user.Id/" class="flex items-center">
                                <img src="images/avatars/@user.ProfilePictureUrl" class="mr-3 h-14 rounded" alt="@user.DisplayName" title="@user.DisplayName" />
                                <span class="self-center text-xl text-primary font-semibold whitespace-nowrap dark:text-white">@user.DisplayName</span>
                            </a>

                        </div>
                    </nav>
                    <div>
                        <div class="flex">
                            Content
                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>

@code
{
    [Parameter]
    public string userId { get; set; } = default!;

    private ApplicationUser user = default!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if(userId != default)
        {
            user = await UserService.FindUserByIdAsync(userId);
        }
    }
}
